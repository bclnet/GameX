A File Manager serves as a hub, congregating essential file information such as Paths, Ignores, and Filters. It facilitates centralized control and efficient navigation of game files.

Paths, signifying the exact location of game folders, are traced using a three-pronged approach. Firstly, through specific directories; secondly, by leveraging existing store managers; or finally, by probing the Windows Registry.

* `getPathByDirectory`: This method scours the 'Games' folder to locate the specified game within the designated sub-folders.

* `getPathByStoreKey`: This method utilizes store managers to track down the game. It covers various gaming platforms including Blizzard, Epic, Gog, and Steam Store Managers.

* `getPathByRegistryKey`: This method delves into the intricate Windows Registry to uncover the game location, searching for specified registry keys in several designated locations: 'HKEY_LOCAL_MACHINE/SOFTWARE,' 'KEY_CURRENT_USER/SOFTWARE,' and 'HKEY_CLASSES_ROOT/VirtualStore/MACHINE/SOFTWARE.'

Once a registry key is located, the method attempts to find the game directory using keys such as 'Path', 'Install Dir', 'InstallDir', 'InstallLocation,' or retrieves the directory location designated in 'Installed Path', 'ExePath', or 'Exe' values.

Importantly, some games begin in a sub-folder within the root game folder. Therefore, the game might specify additional paths which are crucial to be combined with the initially found root folder, for thorough file location and management.