==== Engine: Danae
The file format for Danae

[cols="1,2,2,6"]
|===
|ID |Type |Field |Description

.2+|HDR
2+|
|*Header*

|uint:4
|fatOffset
|Fat Table Offset

.3+|FAT
2+|seek: fatOffset
|*Fat Table*

|uint:4
|fatSize
|Fat Size

|bytes:+
|fatBytes
|Fat Bytes
|===

[bytefield, target="Arkane_pakfile_danae"]
----
(draw-column-headers)
(draw-box "fatOffset" {:span 4})
(draw-gap "data")
(draw-box "fatSize" {:span 4})
(draw-box "fatBytes" {:span 4 :borders #{:left :top :bottom}})
(draw-gap-inline)
(draw-box "eof")
(draw-bottom)
----



To deconstruct the fat table:

[,python]
----
# while there are bytes
while b < fatSize:
    dirPath = readString()
    numFiles = readInt32()
    for _ in range(0, numFiles):
        # get file
        file = FileSource(
            path = dirPath + readString(),
            position = readInt32(),
            compressed = readInt32(),
            fileSize = readInt32(),
            packedSize = readInt32())
            # special case
            if file.path.endswith('.FTL'): file.compressed = 1
            elif file.compressed == 0: file.fileSize = file.packedSize
            # add file
            files.append(file)
----

To access a FILE

[,python]
----
r.seek(file.position)
if (file.compressed & 1) != 0: decompressBlast(r, file.packedSize, file.fileSize)
else: r.read(file.packedSize)
----

==== Full source code
[,python]
----
include::../../../../python/gamex/Arkane/pakbinary_danae.py[]
----
