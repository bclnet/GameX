==== Fallout 1
The DAT file format for Fallout 1

[cols="1,2,2,6"]
|===
|ID |Type |Field |Description

.5+|HDR
2+|
|*Header*

|uint:4
|directoryCount
|Directory Count

|uint:4
|unknown1
|Usually 0x0A (0x5E for master.dat). Must not be less than 1 or Fallout will crash instantly with a memory read error. Possibly some kind of memory buffer size.

|uint:4
|unknown2
|Always 0.

|uint:4
|unknown3
|Could be some kind of checksum, but Fallout seems to work fine with any value.

.2+|DNAME
2+|repeat: directoryCount
|*Directory Paths*

|ascii:l8
|directoryPath
|Directory Path

.6+|DIR
2+|repeat: directoryCount
|Directory Block

|ascii:l8
|directoryPath
|Root Path for directory

|uint:4
|fileCount
|Number of files in the directory.

|uint:4
|unknown1
|Similar to (Unknown1), the default value seems to be 0x0A and Fallout works with most positive non-zero values.

|uint:4
|unknown2
|Seems to always be 0x10.

|uint:4
|unknown3
|See (Unknown3).

.6+|FILE
2+|repeat: fileCount
|*File Block*

|ascii:l8
|path
|file path - combine with directoryPath

|uint:4
|attributes
|0x20 means plain-text, 0x40 - compressed with LZSS.

|uint:4
|offset
|Position in the file (from the beginning of the DAT file), where the file contets start.

|uint:4
|size
|Original (uncompressed) file size.

|uint:4
|packedSize
|Size of the compressed file in dat. If file is not compressed, PackedSize is 0.
|===

To access a FILE
----
r.seek(file.position)
if file.compressed == 0: r.read(file.packedSize)
else: decompressLzss(r, file.packedSize, file.fileSize)
----

==== Fallout 2
The DAT file format for Fallout 2

[cols="1,2,2,6"]
|===
|Group |Type |Name |Description

.3+|HDR
2+|
|*Header*

|uint:4
|treeSize
|Size of DirTree in bytes.

|uint:4
|dataSize
|Full size of the archive in bytes.

.2+|FHDR
2+|seek: dataSize - treeSize - 8
|*File Header*

|uint:4
|filenum
|Number of files.

.6+|FILE
2+|repeat: filenum
|*File Section*

|ascii:l32
|path
|The file path.

|byte:1
|type
|1 = Compressed 0 = Decompressed

|uint:4
|realSize
|Size of the file without compression.

|uint:4
|packedSize
|Size of the compressed file.

|uint:4
|offset
|Address/Location of the file.
|===

To access a FILE
----
r.seek(file.position)
if r.peek(z => z.readUInt16()) == 0xda78: decompressZlib(r, file.packedSize, -1)
else: r.read(file.packedSize)
----

==== Full source code
[,python]
----
include::../../../../python/gamex/Black/pakbinary_dat.py[]
----
